diff --git a/app/javascript/mastodon/components/status_content.jsx b/app/javascript/mastodon/components/status_content.jsx
index d3bbc1ba0..ef4d83c19 100644
--- a/app/javascript/mastodon/components/status_content.jsx
+++ b/app/javascript/mastodon/components/status_content.jsx
@@ -12,6 +12,7 @@ import { connect } from 'react-redux';
 import { Icon }  from 'mastodon/components/icon';
 import PollContainer from 'mastodon/containers/poll_container';
 import { autoPlayGif, languages as preloadedLanguages } from 'mastodon/initial_state';
+import parseGPlusFormatting from 'mastodon/utils/parse_g_plus_formatting'
 
 const MAX_HEIGHT = 706; // 22px * 32 (+ 2px padding at the top)
 
@@ -21,7 +22,7 @@ const MAX_HEIGHT = 706; // 22px * 32 (+ 2px padding at the top)
  * @returns {string}
  */
 export function getStatusContent(status) {
-  return status.getIn(['translation', 'contentHtml']) || status.get('contentHtml');
+  return parseGPlusFormatting(status.getIn(['translation', 'contentHtml'])) || parseGPlusFormatting(status.get('contentHtml'));
 }
 
 class TranslateButton extends PureComponent {
@@ -244,7 +245,7 @@ class StatusContent extends PureComponent {
     const renderTranslate = this.props.onTranslate && this.context.identity.signedIn && ['public', 'unlisted'].includes(status.get('visibility')) && status.get('search_index').trim().length > 0 && targetLanguages?.includes(contentLocale);
 
     const content = { __html: statusContent ?? getStatusContent(status) };
-    const spoilerContent = { __html: status.getIn(['translation', 'spoilerHtml']) || status.get('spoilerHtml') };
+    const spoilerContent = { __html: parseGPlusFormatting(status.getIn(['translation', 'spoilerHtml'])) || parseGPlusFormatting(status.get('spoilerHtml')) };
     const language = status.getIn(['translation', 'language']) || status.get('language');
     const classNames = classnames('status__content', {
       'status__content--with-action': this.props.onClick && this.context.router,
diff --git a/app/javascript/mastodon/features/compose/components/reply_indicator.jsx b/app/javascript/mastodon/features/compose/components/reply_indicator.jsx
index 187a99c58..10ba5ccdd 100644
--- a/app/javascript/mastodon/features/compose/components/reply_indicator.jsx
+++ b/app/javascript/mastodon/features/compose/components/reply_indicator.jsx
@@ -6,11 +6,13 @@ import ImmutablePropTypes from 'react-immutable-proptypes';
 import ImmutablePureComponent from 'react-immutable-pure-component';
 
 import AttachmentList from 'mastodon/components/attachment_list';
+import parseGPlusFormatting from 'mastodon/utils/parse_g_plus_formatting'
 
 import { Avatar } from '../../../components/avatar';
 import { DisplayName } from '../../../components/display_name';
 import { IconButton } from '../../../components/icon_button';
 
+
 const messages = defineMessages({
   cancel: { id: 'reply_indicator.cancel', defaultMessage: 'Cancel' },
 });
@@ -45,7 +47,7 @@ class ReplyIndicator extends ImmutablePureComponent {
       return null;
     }
 
-    const content = { __html: status.get('contentHtml') };
+    const content = { __html: parseGPlusFormatting(status.get('contentHtml')) };
 
     return (
       <div className='reply-indicator'>
diff --git a/app/javascript/mastodon/utils/parse_g_plus_formatting.js b/app/javascript/mastodon/utils/parse_g_plus_formatting.js
new file mode 100644
index 000000000..7b3b0b08b
--- /dev/null
+++ b/app/javascript/mastodon/utils/parse_g_plus_formatting.js
@@ -0,0 +1,21 @@
+// Adapted from https://github.com/pill-city/pill-city/blob/a68f58893a83709e77af128743b01e5de4a67e2e/web/src/utils/parseContent.js#L3
+// <p> is the Mastodon text start, </p> is the Mastodon text end
+const GPlusStrikeThrough = /(^|\s|<p>)-(.+?)-($|\s|<\/p>)/gm
+// const GPlusItalic = /(^|\s|<p>)_(.+?)_($|\s|<\/p>)/gm
+// const GPlusBold = /(^|\s|<p>)\*(.+?)\*($|\s|<\/p>)/gm
+
+const MastodonNewLine = '<br />'
+
+const parseGPlusFormatting = (contentHtml) => {
+  return contentHtml
+    .split(MastodonNewLine)
+    .map(line => {
+        return line
+          .replace(GPlusStrikeThrough, '$1<del>$2</del>$3')
+          // .replace(GPlusItalic, "$1<i>$2</i>$3")
+          // .replace(GPlusBold, '$1<b>$2</b>$3')
+    })
+    .join(MastodonNewLine)
+}
+
+export default parseGPlusFormatting
