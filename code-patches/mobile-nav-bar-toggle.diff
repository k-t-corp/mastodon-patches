diff --git a/app/javascript/mastodon/features/ui/components/columns_area.js b/app/javascript/mastodon/features/ui/components/columns_area.js
index 1dd6e34e8..1b1d69225 100644
--- a/app/javascript/mastodon/features/ui/components/columns_area.js
+++ b/app/javascript/mastodon/features/ui/components/columns_area.js
@@ -23,6 +23,7 @@ import ComposePanel from './compose_panel';
 import NavigationPanel from './navigation_panel';
 import { supportsPassiveEvents } from 'detect-passive-events';
 import { scrollRight } from '../../../scroll';
+import { shouldShowNavPanel } from '../../../is_mobile';
 
 const componentMap = {
   'COMPOSE': Compose,
@@ -50,6 +51,7 @@ export default class ColumnsArea extends ImmutablePureComponent {
     isModalOpen: PropTypes.bool.isRequired,
     singleColumn: PropTypes.bool,
     children: PropTypes.node,
+    isNavPanelOpen: PropTypes.bool.isRequired,
   };
 
   // Corresponds to (max-width: $no-gap-breakpoint + 285px - 1px) in SCSS
@@ -134,9 +136,17 @@ export default class ColumnsArea extends ImmutablePureComponent {
   };
 
   render () {
-    const { columns, children, singleColumn, isModalOpen } = this.props;
+    const { columns, children, singleColumn, isModalOpen, isNavPanelOpen } = this.props;
     const { renderComposePanel } = this.state;
 
+    let mainPanelsAdditionalStyle;
+    const showNavPanel = shouldShowNavPanel() || isNavPanelOpen;
+    if (showNavPanel) {
+      mainPanelsAdditionalStyle = {};
+    } else {
+      mainPanelsAdditionalStyle = { width: '100%' };
+    }
+
     if (singleColumn) {
       return (
         <div className='columns-area__panels'>
@@ -146,16 +156,18 @@ export default class ColumnsArea extends ImmutablePureComponent {
             </div>
           </div>
 
-          <div className='columns-area__panels__main'>
+          <div className='columns-area__panels__main' style={mainPanelsAdditionalStyle}>
             <div className='tabs-bar__wrapper'><div id='tabs-bar__portal' /></div>
             <div className='columns-area columns-area--mobile'>{children}</div>
           </div>
 
-          <div className='columns-area__panels__pane columns-area__panels__pane--start columns-area__panels__pane--navigational'>
-            <div className='columns-area__panels__pane__inner'>
-              <NavigationPanel />
+          {showNavPanel &&
+            <div className='columns-area__panels__pane columns-area__panels__pane--start columns-area__panels__pane--navigational'>
+              <div className='columns-area__panels__pane__inner'>
+                <NavigationPanel />
+              </div>
             </div>
-          </div>
+          }
         </div>
       );
     }
diff --git a/app/javascript/mastodon/features/ui/components/header.js b/app/javascript/mastodon/features/ui/components/header.js
index 92adc47a9..9c049ede9 100644
--- a/app/javascript/mastodon/features/ui/components/header.js
+++ b/app/javascript/mastodon/features/ui/components/header.js
@@ -7,6 +7,7 @@ import Avatar from 'mastodon/components/avatar';
 import PropTypes from 'prop-types';
 import { connect } from 'react-redux';
 import { openModal } from 'mastodon/actions/modal';
+import { shouldShowNavPanel } from '../../../is_mobile';
 
 const Account = connect(state => ({
   account: state.getIn(['accounts', me]),
@@ -22,6 +23,19 @@ const mapDispatchToProps = (dispatch) => ({
   },
 });
 
+const navPanelToggle = (isNavPanelOpen, toggleNavPanel) => {
+  if (shouldShowNavPanel()) {
+    return null;
+  }
+  return (
+    <div style={{ width: '32px' }} onClick={toggleNavPanel} onKeyPress={toggleNavPanel} role='button' tabIndex={0}>
+      <div style={{ width: '50%', margin: '0 auto' }}>
+        {isNavPanelOpen ? <i className='fa fa-times' /> : <i className='fa fa-bars' />}
+      </div>
+    </div>
+  );
+};
+
 export default @withRouter
 @connect(null, mapDispatchToProps)
 class Header extends React.PureComponent {
@@ -33,11 +47,13 @@ class Header extends React.PureComponent {
   static propTypes = {
     openClosedRegistrationsModal: PropTypes.func,
     location: PropTypes.object,
+    isNavPanelOpen: PropTypes.bool.isRequired,
+    toggleNavPanel: PropTypes.func.isRequired,
   };
 
   render () {
     const { signedIn } = this.context.identity;
-    const { location, openClosedRegistrationsModal } = this.props;
+    const { location, openClosedRegistrationsModal, isNavPanelOpen, toggleNavPanel } = this.props;
 
     let content;
 
@@ -46,6 +62,7 @@ class Header extends React.PureComponent {
         <>
           {location.pathname !== '/publish' && <Link to='/publish' className='button'><FormattedMessage id='compose_form.publish_form' defaultMessage='Publish' /></Link>}
           <Account />
+          {navPanelToggle(isNavPanelOpen, toggleNavPanel)}
         </>
       );
     } else {
diff --git a/app/javascript/mastodon/features/ui/index.js b/app/javascript/mastodon/features/ui/index.js
index 2dd59f95d..0ecfb5de2 100644
--- a/app/javascript/mastodon/features/ui/index.js
+++ b/app/javascript/mastodon/features/ui/index.js
@@ -121,6 +121,7 @@ class SwitchingColumnsArea extends React.PureComponent {
     children: PropTypes.node,
     location: PropTypes.object,
     mobile: PropTypes.bool,
+    isNavPanelOpen: PropTypes.bool.isRequired,
   };
 
   componentWillMount () {
@@ -151,7 +152,7 @@ class SwitchingColumnsArea extends React.PureComponent {
   };
 
   render () {
-    const { children, mobile } = this.props;
+    const { children, mobile, isNavPanelOpen } = this.props;
     const { signedIn } = this.context.identity;
 
     let redirect;
@@ -171,7 +172,7 @@ class SwitchingColumnsArea extends React.PureComponent {
     }
 
     return (
-      <ColumnsAreaContainer ref={this.setRef} singleColumn={mobile}>
+      <ColumnsAreaContainer ref={this.setRef} singleColumn={mobile} isNavPanelOpen={isNavPanelOpen}>
         <WrappedSwitch>
           {redirect}
 
@@ -256,6 +257,7 @@ class UI extends React.PureComponent {
 
   state = {
     draggingOver: false,
+    isNavPanelOpen: false,
   };
 
   handleBeforeUnload = e => {
@@ -541,8 +543,12 @@ class UI extends React.PureComponent {
     this.context.router.history.push('/follow_requests');
   };
 
+  handleToggleNavPanel = () => {
+    this.setState({ isNavPanelOpen: !this.state.isNavPanelOpen });
+  }
+
   render () {
-    const { draggingOver } = this.state;
+    const { draggingOver, isNavPanelOpen } = this.state;
     const { children, isComposing, location, dropdownMenuIsOpen, layout } = this.props;
 
     const handlers = {
@@ -565,14 +571,15 @@ class UI extends React.PureComponent {
       goToBlocked: this.handleHotkeyGoToBlocked,
       goToMuted: this.handleHotkeyGoToMuted,
       goToRequests: this.handleHotkeyGoToRequests,
+      handleToggleNavPanel: this.handleToggleNavPanel,
     };
 
     return (
       <HotKeys keyMap={keyMap} handlers={handlers} ref={this.setHotkeysRef} attach={window} focused>
         <div className={classNames('ui', { 'is-composing': isComposing })} ref={this.setRef} style={{ pointerEvents: dropdownMenuIsOpen ? 'none' : null }}>
-          <Header />
+          <Header isNavPanelOpen={isNavPanelOpen} toggleNavPanel={this.handleToggleNavPanel} />
 
-          <SwitchingColumnsArea location={location} mobile={layout === 'mobile' || layout === 'single-column'}>
+          <SwitchingColumnsArea location={location} mobile={layout === 'mobile' || layout === 'single-column'} isNavPanelOpen={isNavPanelOpen}>
             {children}
           </SwitchingColumnsArea>
 
diff --git a/app/javascript/mastodon/is_mobile.js b/app/javascript/mastodon/is_mobile.js
index 3c8ec1545..d5922855f 100644
--- a/app/javascript/mastodon/is_mobile.js
+++ b/app/javascript/mastodon/is_mobile.js
@@ -41,3 +41,7 @@ window.addEventListener('touchstart', touchListener, listenerOptions);
 export const isUserTouching = () => userTouching;
 
 export const isIOS = () => iOS;
+
+export const shouldShowNavPanel = () => {
+  return layoutFromWindow() !== 'mobile';
+};
